version: '3.7'

services:
#  postgresdb:
#    build:
#      context: ./docker/postgres
#      dockerfile: Dockerfile
#    environment:
#      - POSTGRES_PASSWORD=postgres
#    volumes:
#      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
#    ports:
#      - "5432:5432"
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
#      - .:/usr/src/app
      - .:/app:rw # map data and files from parent directory in host to microservice directory in docker container
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/src/media
#    depends_on:
#      - postgresdb
    ports:
    - "8000:8000"
    expose:
      - "8000"

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    depends_on:
      - web
#      - postgresdb
    ports:
      - "80:80"
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/src/media
    restart: "on-failure"

  redis:
    image: redis
    container_name: redis_server
    tty: true
    stdin_open: true
    restart: always
#    environment:
#      - RABBITMQ_DEFAULT_USER=1234
#      - RABBITMQ_DEFAULT_PASS=12341234
#      - RABBITMQ_DEFAULT_HOST=14312432314
#    env_file:
#      - .env
    ports:
      - "6379:6379"

  celery:
    command: "celery -A src worker --autoscale=4,2 -l info --queue=fila1"
    depends_on:
      - web
      - redis
    restart: always

volumes:
  static_volume:
  media_volume: